<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ws.senlin.dao.PostsReplyDAO" >
  <resultMap id="BaseResultMap" type="ws.senlin.entity.PostsReply" >
    <id column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="reply_text" property="replyText" jdbcType="VARCHAR" />
    <result column="reply_date" property="replyDate" jdbcType="TIMESTAMP" />
    <result column="reply_picture" property="replyPicture" jdbcType="VARCHAR" />
    <result column="posts_super" property="postsSuper" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    reply_id, user_account, user_name, reply_text, reply_date, reply_picture, posts_super
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from posts_reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from posts_reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ws.senlin.entity.PostsReply" >
    insert into posts_reply (reply_id, user_account, user_name, 
      reply_text, reply_date, reply_picture, 
      posts_super)
    values (#{replyId,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{replyText,jdbcType=VARCHAR}, #{replyDate,jdbcType=TIMESTAMP}, #{replyPicture,jdbcType=VARCHAR}, 
      #{postsSuper,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ws.senlin.entity.PostsReply" >
    insert into posts_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="replyText != null" >
        reply_text,
      </if>
      <if test="replyDate != null" >
        reply_date,
      </if>
      <if test="replyPicture != null" >
        reply_picture,
      </if>
      <if test="postsSuper != null" >
        posts_super,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="replyText != null" >
        #{replyText,jdbcType=VARCHAR},
      </if>
      <if test="replyDate != null" >
        #{replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="replyPicture != null" >
        #{replyPicture,jdbcType=VARCHAR},
      </if>
      <if test="postsSuper != null" >
        #{postsSuper,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ws.senlin.entity.PostsReply" >
    update posts_reply
    <set >
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="replyText != null" >
        reply_text = #{replyText,jdbcType=VARCHAR},
      </if>
      <if test="replyDate != null" >
        reply_date = #{replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="replyPicture != null" >
        reply_picture = #{replyPicture,jdbcType=VARCHAR},
      </if>
      <if test="postsSuper != null" >
        posts_super = #{postsSuper,jdbcType=INTEGER},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ws.senlin.entity.PostsReply" >
    update posts_reply
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      reply_text = #{replyText,jdbcType=VARCHAR},
      reply_date = #{replyDate,jdbcType=TIMESTAMP},
      reply_picture = #{replyPicture,jdbcType=VARCHAR},
      posts_super = #{postsSuper,jdbcType=INTEGER}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
</mapper>